1. (a) Output question
        public class p2 {
            static int x = -55;
        
            public static void main(String[] args) {
                p2 obj1 = new p2();
                obj1.x = obj1.x * 2 - 66;
                System.out.println(obj1.x);
                p2 obj2 = new p2();
                obj2.x = obj2.x + 66;
                System.out.println(obj1.x + " " + obj2.x);
            }
        
            static {
                System.out.println(x);
            }
        }

    /*
     * Answer:
     *      -55 (static block will get executed first)
     *      -176
     *      -110 -110
     */

1. (b) Output question
        public class p2 {
            public static final int x = 4;
            public static void main(String[] args) {
                int a = 10, b = 5;
                switch (a < b ? a : b - 1) {
                    case 5:
                        System.out.println("Wow");
                        break;
                    case 3:
                        System.out.println("Its working");
                        break;
                    case x:
                        System.out.println("Ooh...");
                        break;
                    default:
                        System.out.println("Fine...");
                }
            }
        }
        
      Answer: Ooh...

1 (c). Output/Error question

        abstract class Bank {
            private String bankName;
            Bank(String bankName) {
                this.bankName = bankName;
            }
            public String getBankName(){
                return "Your bank is: " + bankName;
            }
        }
        
        class p3 extends Bank {
            p3 () {
                super("SBI");
                super("AXIS");
            }
        
            public static void main(String args[]) {
                Bank bank = new p3();
                System.out.println(bank.getBankName());
            }
        }
        
        /*
         * Here user is trying to call parent class constructor
         * (super) twice with different argument which is causing
         * the error.
         */
        
        // Corrected code:
        
        abstract class Bank {
            private String bankName;
            Bank(String bankName) {
                this.bankName = bankName;
            }
            public String getBankName(){
                return "Your bank is: " + bankName;
            }
        }
        
        class p3 extends Bank {
            p3 () {
                super("SBI");
            }
        
            public static void main(String args[]) {
                Bank bank = new p3();
                System.out.println(bank.getBankName());
            }
        }

2. (a) Define a class called Complex with instance variables real,
       imag and instance methods displayÂ° and add0. Initialize 
       the two complex number by using parameterized constructor. 
       Write a Java program to add two complex number. The
       prototype of add method is: 
                public Complex add(Complex, Complex). 


          public class Complex {
              int real;
              int imag;
          
              public Complex(int real, int imag) {
                  this.real = real;
                  this.imag = imag;
              }
          
              public Complex add(Complex z1, Complex z2) {
                  int rSum = z1.real + z2.real;
                  int rImag = z1.imag + z2.imag;
                  return new Complex(rSum, rImag);
              }
          
              public void display() {
                  System.out.println(real + " + i" + imag);
              }
          
              public static void main(String[] args) {
                  Complex z1 = new Complex(3, 1);
                  Complex z2 = new Complex(2, 2);
          
                  Complex sum = z1.add(z1, z2);
                  sum.display();
              }
          }
          
          // 5 + i3
